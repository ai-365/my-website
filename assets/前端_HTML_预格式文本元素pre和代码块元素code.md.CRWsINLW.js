import{_ as a,c as i,o as e,ae as n}from"./chunks/framework.rTUm5mJw.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"前端/HTML/预格式文本元素pre和代码块元素code.md","filePath":"前端/HTML/预格式文本元素pre和代码块元素code.md"}'),t={name:"前端/HTML/预格式文本元素pre和代码块元素code.md"};function p(l,s,h,d,o,r){return e(),i("div",null,s[0]||(s[0]=[n(`<p>在markdown中经常需要写代码块。</p><p><code>&lt;pre&gt;</code>定义预格式文本，<code>&lt;code&gt;</code>定义代码。</p><p>如下是一个典型的代码块：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pre</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;console.log(&quot;Hello World&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pre</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>不过，这里没有语法高亮，市面上许多markdown编辑器都提供了语法高亮的方案。</p>`,5)]))}const E=a(t,[["render",p]]);export{c as __pageData,E as default};
