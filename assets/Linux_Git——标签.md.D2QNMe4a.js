import{_ as a,c as e,o as i,ae as s}from"./chunks/framework.rTUm5mJw.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Linux/Git——标签.md","filePath":"Linux/Git——标签.md"}'),p={name:"Linux/Git——标签.md"};function n(o,t,l,c,d,r){return i(),e("div",null,t[0]||(t[0]=[s('<h2 id="标签" tabindex="-1">标签 <a class="header-anchor" href="#标签" aria-label="Permalink to &quot;标签&quot;">​</a></h2><p>Git 可以给仓库历史中的某一个提交打上标签，以示重要。 比较有代表性的是人们会使用这个功能来标记发布结点（ v1.0 、 v2.0 等等）。</p><p>在 Git 中列出已有的标签非常简单，只需要输入 git tag。</p><p>你也可以按照特定的模式查找标签。 例如，Git 自身的源代码仓库包含标签的数量超过 500 个。 如果只对 1.8.5 系列感兴趣，可以运行：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git tag -l &quot;1.8.5*&quot;</span></span></code></pre></div><p>Git 支持两种标签：轻量标签（lightweight）与附注标签（annotated）。轻量标签很像一个不会改变的分支——它只是某个特定提交的引用。而附注标签是存储在 Git 数据库中的一个完整对象， 它们是可以被校验的。推荐使用附注标签。</p><p>给某次提交打标签，并附上该标签的说明：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git tag -a v1.0 9fceb02 -m &quot;Release 1.0&quot;</span></span></code></pre></div><p>-a选项后接标签名称，其后接commitID，-m选项为该标签的附件说明。</p>',9)]))}const h=a(p,[["render",n]]);export{u as __pageData,h as default};
