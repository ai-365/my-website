import{_ as a,c as i,o as e,ae as t}from"./chunks/framework.rTUm5mJw.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"人工智能/Python——字符串——移除前缀、后缀.md","filePath":"人工智能/Python——字符串——移除前缀、后缀.md"}'),n={name:"人工智能/Python——字符串——移除前缀、后缀.md"};function p(l,s,h,o,k,d){return e(),i("div",null,s[0]||(s[0]=[t(`<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>str.removeprefix(prefix)</span></span></code></pre></div><p>如果字符串以prefix开头，则返回删除了该前缀的新子串。如果不以该前缀开头，返回原字符串。</p><div class="language-Python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;TestHook&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.removeprefix(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &#39;Hook&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;BaseTestCase&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.removeprefix(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &#39;BaseTestCase&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#  虽然包含，但不是前缀</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>str.removesuffix(suffix)</span></span></code></pre></div><p>如果字符串以 suffix 字符串结尾，则返回删除了该后缀的新子串。如果不以该后缀结尾，返回原字符串。</p><div class="language-Python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;MiscTests&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.removesuffix(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Tests&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &#39;Misc&#39;</span></span></code></pre></div>`,6)]))}const g=a(n,[["render",p]]);export{c as __pageData,g as default};
