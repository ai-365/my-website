import{_ as s,c as n,o as p,ae as e}from"./chunks/framework.rTUm5mJw.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"人工智能/Python——字典——新建字典.md","filePath":"人工智能/Python——字典——新建字典.md"}'),t={name:"人工智能/Python——字典——新建字典.md"};function i(l,a,d,c,o,h){return p(),n("div",null,a[0]||(a[0]=[e(`<p>Python中的字典包含一个或多个键值对。这些键值对是没有顺序的，因此不能通过索引访问。</p><p>因为字典的键值对没有顺序，Python字典不是可迭代对象。</p><p>通常通过一对花括号新建一个字典：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>di= {&#39;a&#39;: 1, &#39;b&#39;: 2}</span></span></code></pre></div><p>键需要使用单引号或双引号包裹。</p><p>通过len()方法得到字典的键值对的数量，即字典的长度：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>di = {&#39;a&#39;: 1, &#39;b&#39;: 2, &#39;name&#39;: &#39;bob&#39;}</span></span>
<span class="line"><span>print(len(di))</span></span></code></pre></div><p>通过中括号和引号包裹键名称可以访问对应的值。注意，与JavaScript不同，不支持使用点号语法。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>di = {&#39;a&#39;: 1, &#39;b&#39;: 2}</span></span>
<span class="line"><span>print(di[&#39;a&#39;])</span></span></code></pre></div><p>为键名称赋值即可添加键值对，如果键本来就存在，则会覆盖原来的值。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>di = {&#39;a&#39;: 1, &#39;b&#39;: 2}</span></span>
<span class="line"><span>di[&#39;c&#39;] = 3</span></span>
<span class="line"><span>di[&#39;a&#39;] = 10</span></span>
<span class="line"><span>print(di)</span></span></code></pre></div><p>使用del语句加上键名称可以删除对应的键值对。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>di = {&#39;a&#39;: 1, &#39;b&#39;: 2}</span></span>
<span class="line"><span>del di[&#39;b&#39;]</span></span>
<span class="line"><span>print(di)</span></span></code></pre></div>`,13)]))}const g=s(t,[["render",i]]);export{b as __pageData,g as default};
