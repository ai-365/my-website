import{_ as i,c as a,o as t,ae as e}from"./chunks/framework.rTUm5mJw.js";const o=JSON.parse('{"title":"PowerShell","description":"","frontmatter":{},"headers":[],"relativePath":"Linux/PowerShell.md","filePath":"Linux/PowerShell.md"}'),n={name:"Linux/PowerShell.md"};function l(h,s,p,k,d,r){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="powershell" tabindex="-1">PowerShell <a class="header-anchor" href="#powershell" aria-label="Permalink to &quot;PowerShell&quot;">​</a></h1><h2 id="别名" tabindex="-1">别名 <a class="header-anchor" href="#别名" aria-label="Permalink to &quot;别名&quot;">​</a></h2><ul><li>Get-Alias 获取当前会话中的所有别名</li><li>New-Alias 创建新别名</li><li>Set-Alias 创建或更改别名</li><li>Remove-Alias 删除别名</li><li>Export-Alias 将一个或多个别名导出到文件</li><li>Import-Alias 将别名文件导入 PowerShell</li></ul><h2 id="获取内置别名-get-alias" tabindex="-1">获取内置别名：Get-Alias <a class="header-anchor" href="#获取内置别名-get-alias" aria-label="Permalink to &quot;获取内置别名：Get-Alias&quot;">​</a></h2><p>获取以p开头的别名：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Get-Alias</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span></code></pre></div><h2 id="创建别名" tabindex="-1">创建别名 <a class="header-anchor" href="#创建别名" aria-label="Permalink to &quot;创建别名&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>New-Alias -Name gas -Value Get-AuthenticodeSignature</span></span>
<span class="line"><span>Set-Alias</span></span></code></pre></div><h2 id="内置的常用别名" tabindex="-1">内置的常用别名 <a class="header-anchor" href="#内置的常用别名" aria-label="Permalink to &quot;内置的常用别名&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Get-Content</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Set-Location</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Copy-Item</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">del</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Remove-Item</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Get-ChildItem</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Write-Output</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Get-Content</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Get-Location</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Get-ChildItem</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Move-Item</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Remove-Item</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Set-Content</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Write-Output</span></span></code></pre></div><h2 id="具有参数的命令的备用名称" tabindex="-1">具有参数的命令的备用名称 <a class="header-anchor" href="#具有参数的命令的备用名称" aria-label="Permalink to &quot;具有参数的命令的备用名称&quot;">​</a></h2><p>可以将别名分配给 cmdlet、脚本、函数或可执行文件。 不能为命令及其参数分配别名。 例如，可以将别名分配给 Get-Eventlog cmdlet，但不能将别名分配给 Get-Eventlog -LogName System 命令。</p><p>这种情况的解决办法是：可以创建包含命令的函数。 若要创建函数，请键入单词“function”，后跟函数的名称。 键入命令，并将其括在大括号 ({}) 中。</p><p>##创建文件或文件夹 使用如下命令创建文件：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">New-Item</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  1.txt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ItemType</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">New-Item</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  2.txt</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 简写形式</span></span></code></pre></div><p>使用如下命令创建文件夹：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">New-Item</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  folder</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ItemType</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Directory</span></span></code></pre></div><p>使用-Force选项覆盖已存在的文件或文件夹。</p><h2 id="读取文本文件内容" tabindex="-1">读取文本文件内容 <a class="header-anchor" href="#读取文本文件内容" aria-label="Permalink to &quot;读取文本文件内容&quot;">​</a></h2><p>Get-Content 将从文件读取的数据视为数组，其中每行文件内容为一个元素。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$arr = Get-Content  .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.md  -encoding utf8</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$arr  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 逐行输出文件的每行内容</span></span></code></pre></div><p>使用utf8是为了避免中文文件的乱码。</p><p>可以通过检查返回的内容的长度来确认此点：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Get-Content </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-Path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> C:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">oot.ini</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).Length</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">6</span></span></code></pre></div><p>如下命令将剪贴板读取到数组中：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$arr = Get-clipboard </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$arr[0]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 第一行内容</span></span></code></pre></div>`,26)]))}const c=i(n,[["render",l]]);export{o as __pageData,c as default};
