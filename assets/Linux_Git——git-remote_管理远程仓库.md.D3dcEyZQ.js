import{_ as e,c as d,o,ae as r}from"./chunks/framework.rTUm5mJw.js";const l=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Linux/Git——git-remote:管理远程仓库.md","filePath":"Linux/Git——git-remote:管理远程仓库.md"}'),i={name:"Linux/Git——git-remote:管理远程仓库.md"};function c(a,t,n,_,s,m){return o(),d("div",null,t[0]||(t[0]=[r('<h2 id="远程仓库管理" tabindex="-1">远程仓库管理 <a class="header-anchor" href="#远程仓库管理" aria-label="Permalink to &quot;远程仓库管理&quot;">​</a></h2><table tabindex="0"><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td><code>git remote</code></td><td>显示远程仓库</td></tr><tr><td><code>git remote -v</code></td><td>显示远程仓库的详细信息</td></tr><tr><td><code>git remote add origin 仓库url</code></td><td>新建远程仓库，origin只是命名习惯，可以任意取名，下同</td></tr><tr><td><code>git remote rm origin</code></td><td>删除远程仓库</td></tr><tr><td><code>git remote rename origin 新名称</code></td><td>重命名远程仓库</td></tr><tr><td><code>git push origin 本地分支:远程分支</code></td><td>将本地仓库的分支上传到远程仓库的分支</td></tr><tr><td><code>git push origin master</code></td><td>一般情况下，本地和远程仓库的分支名均为master，那么可以这样简写</td></tr><tr><td><code>git push --force origin 本地分支:远程分支</code></td><td>忽略其它的提交，强制推送，<code>--force</code>等同于<code>-f</code>，注意<code>--force</code>选项谨慎使用。</td></tr><tr><td><code>git pull</code></td><td>将本地的仓库与远程仓库对齐</td></tr></tbody></table>',2)]))}const h=e(i,[["render",c]]);export{l as __pageData,h as default};
