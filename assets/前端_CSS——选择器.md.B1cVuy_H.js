import{_ as l,c as o,o as i,ae as d}from"./chunks/framework.rTUm5mJw.js";const h=JSON.parse('{"title":"选择器","description":"","frontmatter":{},"headers":[],"relativePath":"前端/CSS——选择器.md","filePath":"前端/CSS——选择器.md"}'),c={name:"前端/CSS——选择器.md"};function t(a,e,r,n,u,p){return i(),o("div",null,e[0]||(e[0]=[d('<h1 id="选择器" tabindex="-1">选择器 <a class="header-anchor" href="#选择器" aria-label="Permalink to &quot;选择器&quot;">​</a></h1><p>选择器的语法说明汇总如下。</p><p>常见的选择器：</p><ul><li><code>*</code> 选取所有元素</li><li><code>type</code> ： 选取指定类型的元素</li><li><code>.className</code> ： 选取包含class样式名的元素</li><li><code>#idName</code> ： 选择指定id值的元素</li></ul><p>根据属性选取：</p><ul><li><code>[attr]</code> ：选取定义了attr属性的元素</li><li><code>type[attr]</code> ：选取定义了attr属性的type类型的元素</li><li><code>[attr=&quot;val&quot;]</code> ：选取定义了attr属性,且值为val的元素</li><li><code>[attr^=&quot;val&quot;]</code> ：选取定义了attr属性,且值以val开头的元素</li><li><code>[attr$=&quot;val&quot;]</code> ： 选取定义了attr属性,且属性值以val结尾的元素</li><li><code>[attr*=&quot;val&quot;]</code> ：选取定义了attr属性,且属性值包含val的元素</li><li><code>[attr~=&quot;val&quot;]</code> ：选取定义了attr属性,且属性值包含多个值,而其中一个为val的元素</li><li><code>[attr|=&quot;val&quot;]</code> ：选取定义了attr属性,且值是以连字符分割的值,而第一个为val的元素</li></ul><p>根据元素间的层级关系选取：</p><ul><li><code>选择器 , 选择器</code> ： 逗号表示或的意思,选择匹配至少一个选择器的元素.</li><li><code>选择器1 选择器2</code> ： 空格表示后代，从匹配选择器1的后代中，选择匹配选择器2的元素。</li><li><code>选择器1 &gt; 选择器2</code> ： 尖括号表示子元素，从匹配选择器1的子元素中，选择匹配选择器2的元素。</li><li><code>选择器1 + 选择器2</code>： 加号表示紧跟其后，在匹配选择器1之后，紧跟其后匹配选择器2.</li><li><code>选择器1 ~ 选择器2</code>： 破浪号表示后面，在匹配选择器1之后，从后续元素匹配选择器2.</li></ul><p>选取第n个子元素：</p><ul><li><code>::first-line</code> ：选择块级元素文本的首行</li><li><code>::first-letter</code> ：选择块级元素文本的首字母。</li><li><code> :before</code> 或 <code>:after </code> ：在选取元素之前或之后插入内容</li><li><code>:root</code>：选取根元素</li><li><code>:first-child</code> ：选择第一个子元素</li><li><code>:last-child</code> ：选择最后一个子元素</li><li><code>:only-child</code> ：如果只有唯一一个子元素，选择该元素</li><li><code>only-of-type</code> ： 选取属于父元素的特定类型的唯一子元素</li><li><code>nth-child(n)</code>： 选取父元素的第 n 个子元素。</li><li><code>:nth-last-child(n)</code>：选取父元素的倒数第n个子元素。</li><li><code>nth-of-type(n)</code> ：选取属于父元素的特定类型的第n个子元素</li><li><code>nth-last-of-type(n)</code> ：选取属于父元素的特定类型的倒数第n个子元素</li></ul><p>根据元素的启用与否选取：</p><ul><li><code>enabled</code> ：选取已启用的元素</li><li><code>disabled</code> ：选取被禁用的元素</li><li><code>checked</code> ：选取所有选中的复选框和单选按钮</li><li><code>default</code> ：选取默认元素</li><li><code>:valid</code> 或 <code>:invalid</code>： 选取基于输入验证判定的有效或者无效的input元素。</li><li><code>in-range</code> 或 <code>out-of-range</code>： 选取被限定在指定范围之内或者之外的input元素。</li><li><code>required</code> 或 <code>:optional</code> ：根据是否允许使用required属性选取input元素。</li></ul><p>根据用户的交互状态选取；</p><ul><li><code>:link</code> ：选取未访问的链接元素</li><li><code>:visited</code> ：选取已访问的链接元素</li><li><code>:hover</code> ：选取鼠标指针悬停在其上面的元素</li><li><code>:active</code> ：选取当前用户激活的元素，这通常意味着用户即将点击该元素</li><li><code>:focus</code> ：选取获得焦点的元素</li><li><code>:not(选择器)</code> ：否定选择，选择不匹配选择器的元素。</li><li><code>:empty</code> ：选取不包含任何子元素或文本的元素</li><li><code>:lang(语言)</code> ：选取lang属性为指定值的元素</li><li><code>:target</code> ：选取URL片段标识符指向的元素。</li></ul><h2 id="第几个-选择符" tabindex="-1">“第几个”选择符 <a class="header-anchor" href="#第几个-选择符" aria-label="Permalink to &quot;“第几个”选择符&quot;">​</a></h2><p>nth-of-type、nth-last-of-type、nth-child、nth-last-child这四个选择符很实用，可以选取第n个元素、奇数偶数、以及按等差数列的形式选取。</p><p>这四个区别是一个选择第n个元素，一个是选取第n个<code>子</code>元素。</p><ul><li><code>:nth-child(3)</code> 第3个子元素</li><li><code>nth-child(1)</code> 第一个，等价于:first-child</li></ul>',18)]))}const _=l(c,[["render",t]]);export{h as __pageData,_ as default};
