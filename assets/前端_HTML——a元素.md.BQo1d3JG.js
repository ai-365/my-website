import{_ as i,c as a,o as t,ae as l}from"./chunks/framework.rTUm5mJw.js";const o=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"前端/HTML——a元素.md","filePath":"前端/HTML——a元素.md"}'),e={name:"前端/HTML——a元素.md"};function n(h,s,p,k,r,d){return t(),a("div",null,s[0]||(s[0]=[l(`<h2 id="生成内部超链接" tabindex="-1">生成内部超链接 <a class="header-anchor" href="#生成内部超链接" aria-label="Permalink to &quot;生成内部超链接&quot;">​</a></h2><p>href属性值可以是井号加上id，这样，当用户点击这个链接时，浏览器会在页面中查找该id属性值对应的元素，并且滚动到视口中。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#fruit&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;点我去目的地&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;width:100px;height:2000px;background:azure&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fruit&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;目的地&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="target-设置链接的打开方式" tabindex="-1">target：设置链接的打开方式 <a class="header-anchor" href="#target-设置链接的打开方式" aria-label="Permalink to &quot;target：设置链接的打开方式&quot;">​</a></h2><ul><li><code>_blank</code> 在新窗口或标签页中打开链接</li><li><code>_parent</code> 在父窗框组中打开链接</li><li><code>_self</code>：在当前窗口打开链接（这是默认行为）</li><li><code>_top</code>：在顶层窗口打开链接</li><li><code>&lt;frame&gt;</code>：在制定窗框中打开链接</li></ul>`,5)]))}const g=i(e,[["render",n]]);export{o as __pageData,g as default};
