import{_ as a,c as i,o as e,ae as t}from"./chunks/framework.rTUm5mJw.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"前端/JavaScript——WebAPI——Local-Storage.md","filePath":"前端/JavaScript——WebAPI——Local-Storage.md"}'),l={name:"前端/JavaScript——WebAPI——Local-Storage.md"};function p(n,s,o,h,c,r){return e(),i("div",null,s[0]||(s[0]=[t('<h2 id="local-storage" tabindex="-1">Local Storage <a class="header-anchor" href="#local-storage" aria-label="Permalink to &quot;Local Storage&quot;">​</a></h2><p>要在浏览器本地存储数据，可以使用cookie、local storage、session storage，这三种对象的区别如下：</p><ul><li>cookie： 最古老的方式，使用特定的格式字符串存储和传输本地数据。</li><li>local storage： 持久化的本地存储，在关闭浏览器后依然有效。</li><li>session storage： 临时的本地存储，在关闭窗口后删除。</li></ul><p>下面讲解localStorage对象的使用方法。</p><p>要存储键值对，使用setItem()方法：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">localStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(key, value)</span></span></code></pre></div><p>也可以直接使用点号语法：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">localStorage.key </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> value</span></span></code></pre></div><p>使用getItem()方法读取键对应的值：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">localStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(key)</span></span></code></pre></div><p>也可以直接使用点号语法：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(localStorage.key)</span></span></code></pre></div><p>使用removeItem()方法可以删除键值对：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">localStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(key)</span></span></code></pre></div><p>使用clear()方法可以清空所有本地存储的键值对：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">localStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div>',16)]))}const g=a(l,[["render",p]]);export{k as __pageData,g as default};
