import{_ as s,c as p,o as t,ae as n}from"./chunks/framework.rTUm5mJw.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"人工智能/Python——模块——from和import语句.md","filePath":"人工智能/Python——模块——from和import语句.md"}'),e={name:"人工智能/Python——模块——from和import语句.md"};function i(o,a,l,c,r,d){return t(),p("div",null,a[0]||(a[0]=[n(`<p><strong>模块的定义</strong></p><p>大多数情况下，一个模块是一个目录，里面包含许多个文件或子目录，用来定义不同的功能。</p><p>要让一个文件夹变成一个Python模块，只需要在该文件夹内新建一个__init__.py文件，当模块被导入时会自动执行里面的代码。注意，<strong>init__py文件一定要存在，哪怕内容为空。同时，每个子目录也要有__init</strong>.py文件。</p><p><strong>模块搜索路径</strong></p><p>默认情况下，会按照如下顺序搜索模块：</p><ul><li>当前目录。</li><li>PYTHONPATH环境变量，这是一个目录列表。</li><li>Python安装目录的site-packages目录。</li></ul><p><strong>__all__变量导出</strong></p><p>模块可以指定只导出哪些内容，这是可以使用__all__变量，例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>__all__ = [&quot;a&quot;, &quot;foo&quot;, &quot;bar&quot;]</span></span></code></pre></div><p>这样，在使用如下两个语句中的一个时，都只会导入这三个变量：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>import package</span></span>
<span class="line"><span>from package import *</span></span></code></pre></div><p><strong>import 语句导入</strong></p><p>import 语句导入另一个模块对象，另一个模块导出的内容都是该对象的成员，例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>import package</span></span>
<span class="line"><span>// 使用</span></span>
<span class="line"><span>package.foo()</span></span></code></pre></div><p><strong>from语句导入</strong></p><p>要使用from语句导入特定的变量，使用：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>from package import a, foo</span></span>
<span class="line"><span>// 使用</span></span>
<span class="line"><span>print(a)</span></span>
<span class="line"><span>foo()</span></span></code></pre></div><p>还可以导入另一个模块导出的全部内容：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>from package import *</span></span></code></pre></div><p>还可以在导入时重命名：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>from package import a  as alias1</span></span></code></pre></div>`,21)]))}const _=s(e,[["render",i]]);export{h as __pageData,_ as default};
