import{_ as e,c as a,o as l,j as t,a as n}from"./chunks/framework.rTUm5mJw.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Linux/Git——Git的原理和.git文件夹.md","filePath":"Linux/Git——Git的原理和.git文件夹.md"}'),r={name:"Linux/Git——Git的原理和.git文件夹.md"};function o(s,i,u,_,d,g){return l(),a("div",null,i[0]||(i[0]=[t("h2",{id:"git的原理和-git-文件夹",tabindex:"-1"},[n("Git的原理和 .git 文件夹 "),t("a",{class:"header-anchor",href:"#git的原理和-git-文件夹","aria-label":'Permalink to "Git的原理和 .git 文件夹"'},"​")],-1),t("p",null,"Git的核心是三个区：",-1),t("ul",null,[t("li",null,"工作区： 在这里开始编辑。"),t("li",null,"暂存区： 在修改文件后，通过git add 将修改添加到暂存区。暂存区的本质其实是要提交到仓库的文件列表。"),t("li",null,"存储库： 使用git commit -m '提交说明'， 从暂存区提交到仓库")],-1),t("p",null,"Git的本质直观表现上就是.git文件夹。",-1),t("p",null,"在克隆Github仓库的时候，默认会在本地新生成一个文件夹，文件夹名称就是仓库名。除了将仓库内的所有文件都拷贝到这个文件夹内以外，还有一个至关重要的动作，就是在新文件夹内包含一个隐藏文件夹——.git。",-1),t("p",null,".git文件夹可以说就是Git的精华所在，该文件夹完整准确的记录了本地仓库所有的操作，包括修改、删除、新增等等。同时，还记录了分支名、远程仓库地址等等，所以，我们无需手动添加远程仓库地址，直接使用git push即可将本地的更改推送到Github。",-1)]))}const G=e(r,[["render",o]]);export{p as __pageData,G as default};
