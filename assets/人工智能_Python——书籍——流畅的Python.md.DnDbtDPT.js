import{_ as i,c as a,o as e,ae as t}from"./chunks/framework.rTUm5mJw.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"人工智能/Python——书籍——流畅的Python.md","filePath":"人工智能/Python——书籍——流畅的Python.md"}'),o={name:"人工智能/Python——书籍——流畅的Python.md"};function r(n,l,h,_,s,d){return e(),a("div",null,l[0]||(l[0]=[t('<h2 id="第一部分-数据结构" tabindex="-1">第一部分 数据结构 <a class="header-anchor" href="#第一部分-数据结构" aria-label="Permalink to &quot;第一部分 数据结构&quot;">​</a></h2><ul><li>第1章 Python数据模型</li><li>第2章 丰富的序列</li><li>第3章 字典和集合</li><li>第4章 Unicode文本和字节序列</li><li>第5章 数据类构建器</li><li>第6章 对象引用、可变性和垃圾回收</li></ul><h2 id="第二部分-函数即对象" tabindex="-1">第二部分 函数即对象 <a class="header-anchor" href="#第二部分-函数即对象" aria-label="Permalink to &quot;第二部分 函数即对象&quot;">​</a></h2><ul><li>第7章 函数是一等对象</li><li>第8章 函数中的类型提示</li><li>第9章 装饰器和闭包</li><li>第10章 使用一等函数实现设计模式</li></ul><h2 id="第三部分-类和协议" tabindex="-1">第三部分 类和协议 <a class="header-anchor" href="#第三部分-类和协议" aria-label="Permalink to &quot;第三部分 类和协议&quot;">​</a></h2><ul><li>第11章 符合Python风格的对象</li><li>第12章 序列的特殊方法</li><li>第13章 接口、协议和抽象基类</li><li>第14章 继承</li><li>第15章 类型提示进阶</li><li>第16章 运算符重载</li></ul><h2 id="第四部分-控制流" tabindex="-1">第四部分 控制流 <a class="header-anchor" href="#第四部分-控制流" aria-label="Permalink to &quot;第四部分 控制流&quot;">​</a></h2><ul><li>第17章 迭代器、生成器和经典协程</li><li>第18章 with、match和else块</li><li>第19章 Python并发模型</li><li>第20章 并发执行器</li><li>第21章 异步编程</li></ul><h2 id="第五部分-元编程" tabindex="-1">第五部分 元编程 <a class="header-anchor" href="#第五部分-元编程" aria-label="Permalink to &quot;第五部分 元编程&quot;">​</a></h2><ul><li>第22章 动态属性和特性</li><li>第23章 属性描述符</li><li>第24章 类元编程</li></ul>',10)]))}const P=i(o,[["render",r]]);export{u as __pageData,P as default};
