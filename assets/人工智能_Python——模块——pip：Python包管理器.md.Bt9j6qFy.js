import{_ as s,c as p,o as e,ae as n}from"./chunks/framework.rTUm5mJw.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"人工智能/Python——模块——pip：Python包管理器.md","filePath":"人工智能/Python——模块——pip：Python包管理器.md"}'),i={name:"人工智能/Python——模块——pip：Python包管理器.md"};function t(l,a,o,c,d,h){return e(),p("div",null,a[0]||(a[0]=[n(`<p>pip是Python官方的包管理器，默认随着Python程序一起安装。</p><p>要检查pip是否已经安装，在终端中运行：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pip</span></span></code></pre></div><p>如果已经安装，则会输出pip的帮助信息。</p><h2 id="安装包" tabindex="-1">安装包 <a class="header-anchor" href="#安装包" aria-label="Permalink to &quot;安装包&quot;">​</a></h2><p>要安装包，运行如下命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pip install package</span></span></code></pre></div><p>pip默认会将包安装到如下位置：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Python安装目录\\Lib\\site-packages</span></span></code></pre></div><h2 id="显示已安装的包列表" tabindex="-1">显示已安装的包列表 <a class="header-anchor" href="#显示已安装的包列表" aria-label="Permalink to &quot;显示已安装的包列表&quot;">​</a></h2><p>要显示已经安装的包列表，运行如下命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pip list</span></span></code></pre></div><h2 id="卸载包" tabindex="-1">卸载包 <a class="header-anchor" href="#卸载包" aria-label="Permalink to &quot;卸载包&quot;">​</a></h2><p>要卸载某个包，运行如下命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pip uninstall package -y</span></span></code></pre></div><p>加上 -y 或 --yes 选项表示确认卸载，如果不加，则需要在终端中手动确认。</p><h2 id="切换下载源" tabindex="-1">切换下载源 <a class="header-anchor" href="#切换下载源" aria-label="Permalink to &quot;切换下载源&quot;">​</a></h2><p>可以将包的下载源地址切换到国内源，例如阿里云的源，以提升下载速度。有两种方式：命令替换和手动替换。</p><p>第一种方式，命令替换，推荐使用。运行如下命令，切换成阿里云的源：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pip config set global.index-url  https://mirrors.aliyun.com/pypi/simple</span></span></code></pre></div><p>第二种方式，手动替换。在用户主目录下，例如Windows中的<code>C:\\Users\\username\\</code>下，创建文件<code>pip.ini</code>，并添加如下内容：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[global]</span></span>
<span class="line"><span>index-url = http://mirrors.aliyun.com/pypi/simple/</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[install]</span></span>
<span class="line"><span>trusted-host=mirrors.aliyun.com</span></span></code></pre></div><p>这样，pip会默认使用这个源。</p>`,23)]))}const g=s(i,[["render",t]]);export{u as __pageData,g as default};
