import{_ as a,c as s,o as t,ae as n}from"./chunks/framework.rTUm5mJw.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"人工智能/Python——元组——元组的索引和分片.md","filePath":"人工智能/Python——元组——元组的索引和分片.md"}'),p={name:"人工智能/Python——元组——元组的索引和分片.md"};function l(o,e,i,c,_,d){return t(),s("div",null,e[0]||(e[0]=[n(`<p>通过中括号和从0开始的索引得到元组的元素：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>turple6 = (1, 2.5, &#39;hello&#39;)</span></span>
<span class="line"><span>print(turple6[2]) # &#39;hello&#39;: 读取第3个位置</span></span></code></pre></div><p>可以对元组进行分片得到新元组，<code>[n:m]</code>表示从第n+1个元素到第m个元素，例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>turple7= (1,2,3,4,5,6,7)</span></span>
<span class="line"><span>turple8 = turple7[3:6]  # (4,5,6) ：从第4个元素到第6个元素</span></span></code></pre></div>`,4)]))}const u=a(p,[["render",l]]);export{h as __pageData,u as default};
