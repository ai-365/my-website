import{_ as i,c as a,o as n,ae as p}from"./chunks/framework.rTUm5mJw.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"人工智能/Python——MoviePy——视频拼接.md","filePath":"人工智能/Python——MoviePy——视频拼接.md"}'),t={name:"人工智能/Python——MoviePy——视频拼接.md"};function l(e,s,h,k,o,d){return n(),a("div",null,s[0]||(s[0]=[p(`<p>实际中经常需要将多个视频片段前后拼接成一个完整的视频，这时会用到concatenate_videoclips()方法。</p><p>脚本示例如下。</p><div class="language-Python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> moviepy.editor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 加载多个视频文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">clip1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> VideoFileClip(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;input1.mp4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">clip2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> VideoFileClip(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;input2.mp4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 拼接视频</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">clips </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> concatenate_videoclips([clip1, clip2])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 导出视频</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">clips.write_videofile(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;output.mp4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,3)]))}const c=i(t,[["render",l]]);export{E as __pageData,c as default};
