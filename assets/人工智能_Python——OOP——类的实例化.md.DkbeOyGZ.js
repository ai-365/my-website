import{_ as i,c as a,o as t,ae as n}from"./chunks/framework.rTUm5mJw.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"人工智能/Python——OOP——类的实例化.md","filePath":"人工智能/Python——OOP——类的实例化.md"}'),e={name:"人工智能/Python——OOP——类的实例化.md"};function p(l,s,h,o,k,d){return t(),a("div",null,s[0]||(s[0]=[n(`<p>直接像函数一样调用类名，传入实际的成员属性，即可实例化一个实例。</p><p>注意，不要写new。</p><div class="language-Python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dog </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Dog(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;milk&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>使用句点访问属性和成员：</p><div class="language-Python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dog.name</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># milk</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dog.sit()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># milk is now sitting.</span></span></code></pre></div>`,5)]))}const _=i(e,[["render",p]]);export{c as __pageData,_ as default};
